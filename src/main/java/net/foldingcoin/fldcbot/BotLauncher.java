package net.foldingcoin.fldcbot;

import java.io.File;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import ch.qos.logback.classic.Level;
import sx.blah.discord.Discord4J;

/**
 * This class contains the base code used to launch the Discord bot.
 *
 * @author Tyler Hancock (Darkhax)
 */
public class BotLauncher {

    /**
     * The logger for bot. This should be used over System.out and printStackTrace!
     */
    public static final Logger LOG = LoggerFactory.getLogger("FLDCBot");

    /**
     * The directory for all files generated by the bot.
     */
    public static final File DATA_DIR = new File("data/");

    /**
     * A globally usable reference to the bot instance.
     */
    // TODO consider removing this variable.
    public static FLDCBot instance;

    public static void main (String... args) {

        try {

            // Creates the data directory if it doesn't exist already.
            if (!DATA_DIR.exists()) {

                DATA_DIR.mkdirs();
            }

            // Restrict the discord4j logger to errors only
            if (Discord4J.LOGGER instanceof ch.qos.logback.classic.Logger) {

                LOG.info("Restricting Discord4J's logger to errors!");
                ((ch.qos.logback.classic.Logger) Discord4J.LOGGER).setLevel(Level.ERROR);
            }

            // Create bot, config, and login
            instance = new FLDCBot("FLDCBot", Configuration.readConfiguration());
            instance.login();
        }

        catch (final Exception e) {

            LOG.trace("Unable to launch bot!", e);
        }
    }
}